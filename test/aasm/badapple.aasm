@main:
$entry:
	LIVE [] []
-	MOV %x%79, @x
-	MOV [I32 48], %x%79
-	MOV %i%21, I16 0
-	JMP $forcond%2
-	LIVE [%i%21] []

$forcond%2:
	LIVE [%i%21] []
-	MOV %const%82, I16 255
-	MOV %i%21%81, %i%21
-	CMP %i%21%81, %const%82
	JB $fortrue%3
	JMP $fordone%5
-	LIVE [%i%21] []

$fordone%5:
	LIVE [] []
-	PUSH I32 0
-	PUSH I8 0
-	CALL @gutil.set_color
	ADD SP, NONE 5
-	MOV %48, [@badapple.colorBlack]
-	PUSH I32 0
-	PUSH %48
-	CALL @gutil.set_color
	ADD SP, NONE 5
-	PUSH I32 -1
-	PUSH I8 -1
-	CALL @gutil.set_color
	ADD SP, NONE 5
-	MOV %55, [@badapple.colorWhite]
-	PUSH I32 -1
-	PUSH %55
-	CALL @gutil.set_color
	ADD SP, NONE 5
-	MOV %f%60, I16 0
-	MOV %dp%67, @badapple.f0
-	JMP $forcond%8
-	LIVE [%dp%67, %f%60] []

$forcond%8:
	LIVE [%dp%67, %f%60] []
-	MOV %const%113, I16 6571
-	MOV %f%60%112, %f%60
-	CMP %f%60%112, %const%113
	JB $fortrue%9
	JMP $whiletrue%14
-	LIVE [%dp%67, %f%60] []

$whiletrue%14:
	LIVE [] []
-	CALL @util.halt
-	JMP $whiletrue%14
-	LIVE [] []

$fortrue%9:
	LIVE [%dp%67, %f%60] []
-	CALL @util.buffer_screen
-	PUSH @badapple.customRegionTable
-	MOV %dp%67%115, %dp%67
-	PUSH %dp%67%115
-	CALL @frame
	ADD SP, NONE 8
	MOV %dp%63, D:A
-	MOV %f%60%120, %f%60
-	CALL @util.halt
-	MOV %f%73, %f%60%120
	ADD %f%73, I16 1
-	LEA %dp%69, [%dp%63 + NONE 0*NONE 1 + I32 1]
-	MOV %f%60, %f%73
-	MOV %dp%67, %dp%69
-	CALL @util.unbuffer_screen
-	JMP $forcond%8
-	LIVE [%dp%67, %f%60] []

$fortrue%3:
	LIVE [%i%21] []
-	MOV %i%21%83, %i%21
-	MOV %30, %i%21%83
	SHL %30, I16 8
-	MOVZ %25, %i%21%83
-	MOV %29, %30
	OR %29, %i%21%83
-	MOV %24<high>, %25<low>
	MOV %24<low>, NONE 0
-	MOVZ %28, %29
-	MOV %c%23, %24
	OR %c%23<low>, %28<low>
	OR %c%23<high>, %28<high>
-	PUSH %c%23
-	MOV %36, %i%21%83<low>
-	PUSH %36
-	CALL @gutil.set_color
	ADD SP, NONE 5
-	MOV %i%38, %i%21%83
	ADD %i%38, I16 1
-	MOV %i%21, %i%38
-	JMP $forcond%2
-	LIVE [%i%21] []

@frame:
$entry:
	LIVE [] []
-	MOV %data, [BP + NONE 8]
-	MOV %fp%31, I32 -268304384
-	MOV %datp%36, %data
-	JMP $whilecond%1
-	LIVE [%fp%31, %datp%36] []

$whilecond%1:
	LIVE [%fp%31, %datp%36] []
-	MOV %fp%31%146, %fp%31
-	MOV %const%147, I32 -268227584
-	CMP %fp%31%146<high>, %const%147<high>
	JB $whiletrue%2
	JA $whiledone%3
	CMP %fp%31%146<low>, %const%147<low>
	JB $whiletrue%2
	JMP $whiledone%3
-	LIVE [%fp%31, %datp%36] []

$whiledone%3:
	LIVE [%datp%36] []
-	MOV %datp%36%192, %datp%36
-	MOV D:A, %datp%36%192
	RET
-	LIVE [] []

$whiletrue%2:
	LIVE [%fp%31, %datp%36] []
-	MOV %datp%36%148, %datp%36
-	MOV %const%151, I8 -4
-	MOV %first%34, [%datp%36%148]
-	MOV %v%37, %const%151
	AND %v%37, [%datp%36%148]
-	MOV %t%40, %first%34
	AND %t%40, I8 3
-	MOV %const%150, I8 0
-	MOV %t%40, %t%40
-	MOV %v%37, %v%37
-	CMP %t%40, %const%150
	JE $iftrue%4
	JMP $elseif%5
-	LIVE [%fp%31, %v%37, %datp%36, %t%40] []

$elseif%5:
	LIVE [%fp%31, %v%37, %datp%36, %t%40] []
-	MOV %const%161, I8 2
-	MOV %t%40%160, %t%40
-	CMP %t%40%160, %const%161
	JE $elseif%5%true%141
	JMP $elseif%7
-	LIVE [%fp%31, %v%37, %datp%36, %t%40] []

$elseif%7:
	LIVE [%fp%31, %v%37, %datp%36, %t%40] []
-	MOV %const%170, I8 3
-	MOV %t%40%169, %t%40
-	CMP %t%40%169, %const%170
	JE $elseif%7%true%143
	JMP $elseif%9
-	LIVE [%fp%31, %v%37, %datp%36] []

$elseif%9:
	LIVE [%fp%31, %v%37, %datp%36] []
-	MOV %v%37%178, %v%37
-	MOV %const%179, I8 -4
-	CMP %v%37%178, %const%179
	JE $elseiftrue%10
	JMP $else%11
-	LIVE [%fp%31, %v%37, %datp%36] []

$else%11:
	LIVE [%fp%31, %v%37, %datp%36] []
-	MOV %v%37%187, %v%37
-	MOV %ctable, [BP + NONE 12]
-	MOVZ %122<low>, %v%37%187
	MOVZ %122, %122<low>
-	MOV %p%118, %ctable
	ADD %p%118<low>, %122<low>
	ADC %p%118<high>, %122<high>
-	MOV %d%124, [%p%118]
-	MOV %fp%31%186, %fp%31
-	PUSH %fp%31%186
-	PUSH %d%124
-	CALL @ccopy
	ADD SP, NONE 8
-	MOVZ %131<low>, [%d%124]
	MOVZ %131, %131<low>
-	MOV %datp%36%188, %datp%36
-	MOV %fp%129, %fp%31%186
	ADD %fp%129<low>, %131<low>
	ADC %fp%129<high>, %131<high>
-	MOV %datp%62, %datp%36%188
-	MOV %fp%64, %fp%129
-	JMP $endif%12
-	LIVE [%fp%64, %datp%62] []

$endif%12:
	LIVE [%fp%64, %datp%62] []
-	MOV %datp%62%158, %datp%62
-	LEA %datp%60, [%datp%62%158 + NONE 0*NONE 1 + I32 1]
-	MOV %fp%64%157, %fp%64
-	MOV %datp%36, %datp%60
-	MOV %fp%31, %fp%64%157
-	JMP $whilecond%1
-	LIVE [%fp%31, %datp%36] []

$elseiftrue%10:
	LIVE [%fp%31, %datp%36] []
-	MOV %fp%31%180, %fp%31
-	MOV %datp%36%181, %datp%36
-	PUSH %fp%31%180
-	LEA %datp%102, [%datp%36%181 + NONE 0*NONE 1 + I32 1]
-	PUSH %datp%102
-	CALL @ccopy
	ADD SP, NONE 8
-	MOVZ %112<low>, [%datp%36%181 + NONE 0*NONE 1 + I32 1]
	MOVZ %112, %112<low>
-	MOV %fp%110, %fp%31%180
	ADD %fp%110<low>, %112<low>
	ADC %fp%110<high>, %112<high>
-	MOV %datp%114, %datp%102
	ADD %datp%114<low>, %112<low>
	ADC %datp%114<high>, %112<high>
-	MOV %fp%64, %fp%110
-	MOV %datp%62, %datp%114
-	JMP $endif%12
-	LIVE [%fp%64, %datp%62] []

$elseif%7%true%143:
	LIVE [%fp%31, %v%37, %datp%36] []
-	MOV %fp%31%198, %fp%31
-	MOV %i%87, I16 0
-	MOV %fp%92, %fp%31%198
-	JMP $forcond%15
-	LIVE [%v%37, %i%87, %fp%92, %datp%36] []

$forcond%15:
	LIVE [%v%37, %i%87, %fp%92, %datp%36] []
-	MOV %v%37%172, %v%37
-	MOVZ %88, %v%37%172
-	MOV %i%87%171, %i%87
-	CMP %i%87%171, %88
	JB $fortrue%16
	JMP $forcond%15%false%144
-	LIVE [%v%37, %i%87, %fp%92, %datp%36] []

$forcond%15%false%144:
	LIVE [%fp%92, %datp%36] []
-	MOV %datp%36%200, %datp%36
-	MOV %fp%92%199, %fp%92
-	MOV %datp%62, %datp%36%200
-	MOV %fp%64, %fp%92%199
-	JMP $endif%12
-	LIVE [%fp%64, %datp%62] []

$fortrue%16:
	LIVE [%v%37, %i%87, %fp%92, %datp%36] []
-	MOV %const%177, I32 -1
-	MOV %fp%92%175, %fp%92
-	MOV %i%87%173, %i%87
-	MOV [%fp%92%175], %const%177
-	MOV %i%97, %i%87%173
	ADD %i%97, I16 4
-	LEA %fp%94, [%fp%92%175 + NONE 0*NONE 1 + I32 4]
-	MOV %i%87, %i%97
-	MOV %fp%92, %fp%94
-	JMP $forcond%15
-	LIVE [%v%37, %i%87, %fp%92, %datp%36] []

$elseif%5%true%141:
	LIVE [%fp%31, %v%37, %datp%36] []
-	MOV %fp%31%193, %fp%31
-	MOV %i%70, I16 0
-	MOV %fp%75, %fp%31%193
-	JMP $forcond%21
-	LIVE [%fp%75, %i%70, %v%37, %datp%36] []

$forcond%21:
	LIVE [%fp%75, %i%70, %v%37, %datp%36] []
-	MOV %v%37%163, %v%37
-	MOVZ %71, %v%37%163
-	MOV %i%70%162, %i%70
-	CMP %i%70%162, %71
	JB $fortrue%22
	JMP $forcond%21%false%142
-	LIVE [%fp%75, %i%70, %v%37, %datp%36] []

$forcond%21%false%142:
	LIVE [%fp%75, %datp%36] []
-	MOV %fp%75%195, %fp%75
-	MOV %datp%36%196, %datp%36
-	MOV %fp%64, %fp%75%195
-	MOV %datp%62, %datp%36%196
-	JMP $endif%12
-	LIVE [%fp%64, %datp%62] []

$fortrue%22:
	LIVE [%fp%75, %i%70, %v%37, %datp%36] []
-	MOV %fp%75%164, %fp%75
-	MOV %const%168, I32 0
-	MOV %i%70%166, %i%70
-	MOV [%fp%75%164], %const%168
-	MOV %i%80, %i%70%166
	ADD %i%80, I16 4
-	LEA %fp%77, [%fp%75%164 + NONE 0*NONE 1 + I32 4]
-	MOV %i%70, %i%80
-	MOV %fp%75, %fp%77
-	JMP $forcond%21
-	LIVE [%fp%75, %i%70, %v%37, %datp%36] []

$iftrue%4:
	LIVE [%fp%31, %v%37, %datp%36] []
-	MOV %datp%36%154, %datp%36
-	MOV %v%37%153, %v%37
-	MOVZ %57, [%datp%36%154 + NONE 0*NONE 1 + I32 1]
-	MOVZ %54, %v%37%153
-	MOV %56, %57
	SHL %56, I16 8
-	MOV %fp%31%152, %fp%31
-	MOV %53, %54
	OR %53, %56
-	LEA %datp%45, [%datp%36%154 + NONE 0*NONE 1 + I32 1]
-	LEA %fp%50, [%fp%31%152 + %53*NONE 1 + NONE 0]
-	MOV %datp%62, %datp%45
-	MOV %fp%64, %fp%50
-	JMP $endif%12
-	LIVE [%fp%64, %datp%62] []

@ccopy:
$entry:
	LIVE [] []
-	MOV %data, [BP + NONE 8]
-	MOVZ %s%6, [%data]
-	MOV %i%13, I16 1
-	MOV %s%6, %s%6
-	JMP $forcond%2
-	LIVE [%i%13, %s%6] []

$forcond%2:
	LIVE [%i%13, %s%6] []
-	MOV %s%6%34, %s%6
-	MOV %i%13%33, %i%13
-	CMP %i%13%33, %s%6%34
	JBE $fortrue%3
	JMP $fordone%5
-	LIVE [%i%13, %s%6] []

$fordone%5:
	LIVE [] []
-	RET
-	LIVE [] []

$fortrue%3:
	LIVE [%i%13, %s%6] []
-	MOV %data, [BP + NONE 8]
-	MOV %i%13%35, %i%13
-	MOV %23, [%data + %i%13%35*NONE 1 + NONE 0]
-	MOV %19, %i%13%35
	SUB %19, I16 1
-	MOV %dest, [BP + NONE 12]
-	MOV [%dest + %19*NONE 1 + NONE 0], %23
-	MOV %i%29, %i%13%35
	ADD %i%29, I16 1
-	MOV %i%13, %i%29
-	JMP $forcond%2
-	LIVE [%i%13, %s%6] []
