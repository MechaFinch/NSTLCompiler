
define bufsize is 320 * 240;
variable buf is u8 pointer gets 0xF0020000;
variable halter is u8 array size 2;

function main of none begin

    buf index (320 * 240) + (0xFF * 3) + 0 gets 0xFF;
    buf index (320 * 240) + (0xFF * 3) + 1 gets 0xFF;
    buf index (320 * 240) + (0xFF * 3) + 2 gets 0xFF; 

	call sieve with buf, bufsize;
	
	halter index 0 gets 0xDF;
	halter index 1 gets 0xD7;
	
	while true do
		call (to halter) with none;
	end while
end function

function sieve of u8 pointer flags, u32 max begin
	for i is u32 gets 0; i < max; i gets i + 1 do
		flags index i gets 0xFF;
	end for
	
	variable p is u32 gets 2;
	while p < max do
		if (flags index p) != 0xFF then
			p gets p + 1;
			continue;
		end if
		
		for i is u32 gets (p << 1); i < max; i gets i + p do
			flags index i gets 0;
		end for
		
		p gets p + 1;
	end while
end function
