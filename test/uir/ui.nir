Module ui {
  const I8[] @scene_camera.str_fuel%68: "Fuel"
  const NONE @true: 1
  const NONE @false: 0
  const I8[] @scene_camera.str_artifacts%70: "Artifact"
  const I8[] @scene_camera.str_metal%69: "Metal"
  const I8[] @scene_camera.str_turtles%67: "Turtles"

  external func NONE @_forth.interop_push(I32 %val)
  external func NONE @_periodic.init()
  external func NONE @_sprites.draw(I32 %sp, I16 %x, I16 %y)
  external func NONE @_sprites.draw_part(I32 %sp, I16 %x, I16 %y, I16 %sx, I16 %sy, I16 %w, I16 %h)
  external func NONE @_os.defer()
  external func NONE @_forth.interop_init(I32 %param_stack_size, I32 %locals_stack_size, I32 %user_dict_size, I16 %user_dict_padding, I16 %stack_padding)
  external func NONE @_editor.draw_region(I32 %region)
  external func I32 @_os.realloc(I32 %block, I32 %n)
  external func I32 @_os.write_file(I16 %handle_id, I32 %buffer_length, I32 %buffer_ptr)
  external func I32 @_os.seek_file(I16 %handle_id, I16 %flags, I32 %value)
  external func I16 @_util.mulh8(I8 %a, I8 %b)
  external func I16 @_util.enable_interrupts()
  external func NONE @_util.set_pf(I16 %arg0)
  external func I8 @_ui.scene_camera(I32 %ui_data)
  external func I8 @_ui.scene_help(I32 %ui_data)
  external func I8 @_util.mod8(I8 %a, I8 %b)
  external func NONE @_editor.set_term_area(I32 %region)
  external func I8 @_util.mods8(I8 %a, I8 %b)
  external func I16 @_util.mod16(I16 %a, I16 %b)
  external func NONE @_os.close_file(I16 %handle_id)
  external func NONE @_util.memcopy(I32 %source, I32 %dest, I32 %length)
  external func I8 @_forth.interop_ncall(I32 %name_ptr, I8 %name_len)
  external func I32 @_util.mulsh16(I16 %a, I16 %b)
  external func NONE @_os.exit()
  external func I16 @_util.get_pf()
  external func I8 @_util.abs8(I8 %a)
  external func I32 @_forth.interop_pop()
  external func I32 @_util.abs32(I16 %a)
  external func I8 @_ui.compile_code(I32 %ui_data)
  external func I32 @_util.atomic_call(I32 %desc, I32 %args)
  external func I16 @_util.mulsh8(I8 %a, I8 %b)
  external func NONE @_sprites.draw_transparent(I32 %sp, I16 %x, I16 %y)
  external func I8 @_editor.edit_region(I32 %region, I8 %edit)
  external func I32 @_os.calloc(I32 %n)
  external func I32 @_os.rcalloc(I32 %block, I32 %n)
  external func NONE @_os.init(I32 %dram_start, I32 %dram_size)
  external func NONE @_ui.scene_loss(I32 %ui_data)
  external func NONE @_ui.scene_win(I32 %ui_data)
  external func I16 @_util.mods16(I16 %a, I16 %b)
  external func I32 @_os.read_file(I16 %handle_id, I32 %buffer_length, I32 %buffer_ptr)
  external func I32 @_util.mulh16(I16 %a, I16 %b)
  external func NONE @_forth.interop_pcall(I32 %xt)
  external func I32 @_forth.interop_peek()
  external func NONE @_sprites.draw_part_transparent(I32 %sp, I16 %x, I16 %y, I16 %sx, I16 %sy, I16 %w, I16 %h)
  external func NONE @_util.halt()
  external func NONE @_ui.wait(I32 %ms)
  external func NONE @_ui.run_interface(I32 %ui_data)
  external func NONE @_os.free(I32 %block)
  external func I16 @_editor.get_index_of(I32 %region, I8 %x, I8 %y)
  external func NONE @_os.change_file_attr(I16 %handle_id, I16 %flags)
  external func I16 @_sprites.get_width(I32 %sp)
  external func I32 @_os.get_term_area()
  external func I16 @_os.get_term_pos()
  external func I16 @_os.open_file(I16 %flags, I16 %name_len, I32 %name_ptr)
  external func I8 @_ui.scene_editor(I32 %ui_data)
  external func I16 @_util.abs16(I16 %a)
  external func NONE @_os.get_file_pos(I16 %handle_id, I32 %read_ptr, I32 %write_ptr)
  external func NONE @_util.buffer_screen()
  external func NONE @_periodic.set_updates_enabled(I8 %enabled)
  external func I8 @_editor.get_char_at(I32 %region, I8 %x, I8 %y)
  external func I32 @_periodic.time_ms()
  external func I32 @_os.malloc(I32 %n)
  external func I8 @_os.get_key_state(I8 %key)
  external func I8 @_ui.non_blocking_read()
  external func I32 @_editor.create_region(I8 %sox, I8 %soy, I8 %sw, I8 %sh, I16 %max_lines)
  external func I8 @_ui.scene_menu(I32 %ui_data)
  external func I16 @_editor.get_index(I32 %region)
  external func NONE @_util.unbuffer_screen()
  external func I16 @_util.disable_interrupts()
  external func I16 @_sprites.get_height(I32 %sp)

  func NONE @wait(I32 %ms, I8 %drop_input) {
    $entry():
      I32 %start_time%0 = CALLR @_periodic.time_ms()
      JMP $whilecond%1()

    $whilecond%1():
      JMP $whiletrue%2()

    $whiletrue%2():
      I32 %time%3 = CALLR @_periodic.time_ms()
      I32 %5 = SUB %time%3, %start_time%0
      JCC %5 A %ms, $iftrue%4(), $endif%5()

    $iftrue%4():
      RET NONE 0

    $endif%5():
      CALLN @_os.defer()
      JCC %drop_input NE NONE 0, $iftrue%6(), $endif%7()

    $iftrue%6():
      CALLN @non_blocking_read()
      JMP $endif%7()

    $endif%7():
      JMP $whilecond%1()

    $whiledone%3():
      RET NONE 0
  }

  func NONE @scene_loss(I32 %ui_data) {
    $entry():
      CALLN @_sprites.draw(%sp = @_spritedata.end_lose, %x = I16 0, %y = I16 0)
      CALLN @ui_end(%ui_data = %ui_data)
      RET NONE 0
  }

  func NONE @scene_win(I32 %ui_data) {
    $entry():
      CALLN @_sprites.draw(%sp = @_spritedata.end_win, %x = I16 0, %y = I16 0)
      CALLN @ui_end(%ui_data = %ui_data)
      RET NONE 0
  }

  func I8 @non_blocking_read() {
    $entry():
      CALLN @_os.change_file_attr(%flags = I16 0, %handle_id = I16 0)
      I32 %buffer%4 = STACK NONE 2
      I32 %amount%5 = CALLR @_os.read_file(%handle_id = I16 0, %buffer_ptr = %buffer%4, %buffer_length = I32 1)
      CALLN @_os.change_file_attr(%flags = I16 4, %handle_id = I16 0)
      JCC %amount%5 E I32 0, $iftrue%0(), $else%1()

    $iftrue%0():
      RET I8 0

    $else%1():
      I8 %16 = LOAD %buffer%4
      RET %16
  }

  func I8 @compile_code(I32 %ui_data) {
    $entry():
      I32 %2 = ADD %ui_data, I32 12
      I32 %1 = LOAD %2
      I32 %0 = ADD %1, I32 11
      STORE I8 6 -> %0
      CALLN @_sprites.draw(%sp = @_spritedata.message_code, %x = I16 54, %y = I16 23)
      I32 %11 = ADD %ui_data, I32 12
      I32 %10 = LOAD %11
      CALLN @_editor.set_term_area(%region = %10)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_lbracket)
      I32 %18 = LOAD %ui_data
      I32 %17 = ADD %18, I32 12
      I32 %16 = LOAD %17
      CALLN @_forth.interop_push(%val = %16)
      I32 %25 = LOAD %ui_data
      I32 %24 = ADD %25, I32 16
      I16 %23 = LOAD %24
      I32 %22 = ZX %23
      CALLN @_forth.interop_push(%val = %22)
      I32 %30 = ADD %ui_data, I32 28
      I32 %29 = LOAD %30
      CALLN @_forth.interop_pcall(%xt = %29)
      CALLN @_sprites.draw(%sp = @_spritedata.tab_code_highlight, %x = I16 90, %y = I16 193)
      CALLN @_sprites.draw(%sp = @_spritedata.code_launch, %x = I16 76, %y = I16 185)
      JMP $whilecond%1(%active_window%62 = I8 6)

    $whilecond%1(I8 %active_window%62):
      JMP $whiletrue%2()

    $whiletrue%2():
      I32 %buff%43 = STACK NONE 2
      CALLN @_os.read_file(%handle_id = I16 0, %buffer_ptr = %buff%43, %buffer_length = I32 1)
      I8 %input%48 = LOAD %buff%43
      I8 %input_shift%52 = AND %input%48, I8 128
      I8 %input_char%55 = AND %input%48, I8 127
      JCC %input_char%55 E I8 27, $iftrue%4(), $endif%5()

    $iftrue%4():
      RET I8 2

    $endif%5():
      JCC %active_window%62 E I8 6, $iftrue%6(), $else%7()

    $iftrue%6():
      JCC %input_char%55 E I8 10, $iftrue%13(), $elseif%14()

    $iftrue%13():
      RET I8 2

    $elseif%14():
      JCC %input_char%55 E I8 9, $elseiftrue%15(), $endif%16(%active_window%99 = %active_window%62)

    $elseiftrue%15():
      CALLN @_sprites.draw(%sp = @_spritedata.tab_code, %x = I16 90, %y = I16 193)
      CALLN @_sprites.draw(%sp = @_spritedata.code_launch_highlight, %x = I16 76, %y = I16 185)
      JMP $endif%16(%active_window%99 = I8 4)

    $endif%16(I8 %active_window%99):
      JMP $endif%8(%active_window%78 = %active_window%99)

    $endif%8(I8 %active_window%78):
      JMP $whilecond%1(%active_window%62 = %active_window%78)

    $else%7():
      JCC %input_char%55 E I8 10, $iftrue%9(), $elseif%10()

    $iftrue%9():
      I32 %83 = ADD %ui_data, I32 32
      I32 %82 = LOAD %83
      CALLN @_forth.interop_pcall(%xt = %82)
      RET I8 1

    $elseif%10():
      JCC %input_char%55 E I8 9, $elseiftrue%11(), $endif%12(%active_window%100 = %active_window%62)

    $elseiftrue%11():
      CALLN @_sprites.draw(%sp = @_spritedata.code_launch, %x = I16 76, %y = I16 185)
      CALLN @_sprites.draw(%sp = @_spritedata.tab_code_highlight, %x = I16 90, %y = I16 193)
      JMP $endif%12(%active_window%100 = I8 6)

    $endif%12(I8 %active_window%100):
      JMP $endif%8(%active_window%78 = %active_window%100)

    $whiledone%3():
      RET I8 2
  }

  func NONE @run_interface(I32 %ui_data) {
    $entry():
      JMP $whilecond%1(%next_scene%3 = I8 0)

    $whilecond%1(I8 %next_scene%3):
      JMP $whiletrue%2()

    $whiletrue%2():
      JCC %next_scene%3 E I8 0, $iftrue%4(), $elseif%5()

    $iftrue%4():
      I8 %next_scene%5 = CALLR @scene_menu(%ui_data = %ui_data%8)
      JMP $endif%16(%next_scene%10 = %next_scene%5)

    $endif%16(I8 %next_scene%10):
      JMP $whilecond%1(%next_scene%3 = %next_scene%10)

    $elseif%5():
      JCC %next_scene%3 E I8 1, $elseiftrue%6(), $elseif%7()

    $elseiftrue%6():
      I8 %next_scene%13 = CALLR @scene_camera(%ui_data = %ui_data%8)
      JMP $endif%16(%next_scene%10 = %next_scene%13)

    $elseif%7():
      JCC %next_scene%3 E I8 2, $elseiftrue%8(), $elseif%9()

    $elseiftrue%8():
      I8 %next_scene%18 = CALLR @scene_editor(%ui_data = %ui_data%8)
      JMP $endif%16(%next_scene%10 = %next_scene%18)

    $elseif%9():
      JCC %next_scene%3 E I8 3, $elseiftrue%10(), $elseif%11()

    $elseiftrue%10():
      I8 %next_scene%23 = CALLR @scene_help(%ui_data = %ui_data%8)
      JMP $endif%16(%next_scene%10 = %next_scene%23)

    $elseif%11():
      JCC %next_scene%3 E I8 4, $elseiftrue%12(), $elseif%13()

    $elseiftrue%12():
      CALLN @scene_win(%ui_data = %ui_data%8)
      JMP $endif%16(%next_scene%10 = %next_scene%3)

    $elseif%13():
      JCC %next_scene%3 E I8 5, $elseiftrue%14(), $else%15()

    $elseiftrue%14():
      CALLN @scene_loss(%ui_data = %ui_data%8)
      JMP $endif%16(%next_scene%10 = %next_scene%3)

    $else%15():
      JMP $endif%16(%next_scene%10 = I8 0)

    $whiledone%3():
      RET NONE 0
  }

  func I8 @scene_camera(I32 %ui_data) {
    $entry():
      CALLN @_sprites.draw(%sp = @_spritedata.camera_bg, %x = I16 0, %y = I16 0)
      CALLN @_sprites.draw(%sp = @_spritedata.button_highlight_3dview_mirror, %x = I16 16, %y = I16 104)
      CALLN @_sprites.draw(%sp = @_spritedata.button_highlight_3dview, %x = I16 64, %y = I16 104)
      CALLN @_sprites.draw(%sp = @_spritedata.button_highlight_turtle_mirror, %x = I16 104, %y = I16 112)
      CALLN @_sprites.draw(%sp = @_spritedata.button_highlight_turtle, %x = I16 176, %y = I16 112)
      I32 %24 = ADD %ui_data, I32 16
      I32 %23 = LOAD %24
      I32 %22 = ADD %23, I32 11
      STORE I8 6 -> %22
      I32 %29 = ADD %ui_data, I32 16
      I32 %28 = LOAD %29
      CALLN @_editor.set_term_area(%region = %28)
      JMP $whilecond%1(%active_window%415 = I8 5, %last_update_time%37 = I32 0)

    $whilecond%1(I32 %last_update_time%37, I8 %active_window%415):
      JMP $whiletrue%2()

    $whiletrue%2():
      I32 %time%32 = CALLR @_periodic.time_ms()
      I32 %34 = SUB %time%32, %last_update_time%37
      JCC %34 A I32 200, $iftrue%4(), $endif%5(%last_update_time%402 = %last_update_time%37)

    $iftrue%4():
      I32 %42 = ADD %ui_data, I32 24
      I32 %41 = LOAD %42
      CALLN @_forth.interop_pcall(%xt = %41)
      I32 %47 = ADD %ui_data, I32 40
      I32 %46 = LOAD %47
      CALLN @_forth.interop_pcall(%xt = %46)
      I32 %50 = CALLR @_forth.interop_pop()
      I32 %flag_end%49 = LOAD %50
      JCC %flag_end%49 NE NONE 0, $iftrue%6(), $endif%7()

    $iftrue%6():
      RET I8 4

    $endif%7():
      I32 %56 = ADD %ui_data, I32 44
      I32 %55 = LOAD %56
      CALLN @_forth.interop_pcall(%xt = %55)
      I32 %59 = CALLR @_forth.interop_pop()
      I32 %flag_end%58 = LOAD %59
      JCC %flag_end%58 NE NONE 0, $iftrue%8(), $endif%9()

    $iftrue%8():
      RET I8 5

    $endif%9():
      CALLN @_util.buffer_screen()
      CALLN @_sprites.draw_part(%sp = @_spritedata.camera_bg, %w = I16 80, %x = I16 16, %h = I16 80, %y = I16 16, %sx = I16 16, %sy = I16 16)
      JMP $forinit%11()

    $forinit%11():
      JMP $forcond%12(%x%74 = I16 0)

    $forcond%12(I16 %x%74):
      JCC %x%74 B I16 20, $fortrue%13(), $fordone%15()

    $fortrue%13():
      JMP $forinit%17()

    $forinit%17():
      JMP $forcond%18(%y%78 = I16 0)

    $forcond%18(I16 %y%78):
      JCC %y%78 B I16 20, $fortrue%19(), $fordone%21()

    $fortrue%19():
      I32 %81 = ZX %x%74
      CALLN @_forth.interop_push(%val = %81)
      I32 %85 = ZX %y%78
      CALLN @_forth.interop_push(%val = %85)
      I32 %89 = ADD %ui_data, I32 36
      I32 %88 = LOAD %89
      CALLN @_forth.interop_pcall(%xt = %88)
      I32 %93 = CALLR @_forth.interop_pop()
      I8 %tile_id%92 = TRUNC %93
      JCC %tile_id%92 E I8 0, $iftrue%22(), $endif%23()

    $iftrue%22():
      JMP $forupd%20()

    $forupd%20():
      I16 %y%97 = ADD %y%78, I16 1
      JMP $forcond%18(%y%78 = %y%97)

    $endif%23():
      JCC %tile_id%92 E I8 1, $iftrue%24(), $elseif%25()

    $iftrue%24():
      JMP $endif%37(%tile_sprite%109 = @_spritedata.map_path)

    $endif%37(I32 %tile_sprite%109):
      JCC %tile_sprite%109 NE I32 0, $iftrue%38(), $endif%39()

    $iftrue%38():
      I16 %115 = MULS %x%74, I16 4
      I16 %113 = ADD I16 16, %115
      I16 %121 = MULS %y%78, I16 4
      I16 %119 = ADD I16 16, %121
      CALLN @_sprites.draw(%sp = %tile_sprite%109, %x = %113, %y = %119)
      JMP $endif%39()

    $endif%39():
      JMP $forupd%20()

    $elseif%25():
      JCC %tile_id%92 E I8 2, $elseiftrue%26(), $elseif%27()

    $elseiftrue%26():
      JMP $endif%37(%tile_sprite%109 = I32 0)

    $elseif%27():
      JCC %tile_id%92 E I8 3, $elseiftrue%28(), $elseif%29()

    $elseiftrue%28():
      JMP $endif%37(%tile_sprite%109 = @_spritedata.map_metal)

    $elseif%29():
      JCC %tile_id%92 E I8 4, $elseiftrue%30(), $elseif%31()

    $elseiftrue%30():
      JMP $endif%37(%tile_sprite%109 = @_spritedata.map_fuel)

    $elseif%31():
      JCC %tile_id%92 E I8 5, $elseiftrue%32(), $elseif%33()

    $elseiftrue%32():
      JMP $endif%37(%tile_sprite%109 = @_spritedata.map_icon)

    $elseif%33():
      JCC %tile_id%92 E I8 6, $elseiftrue%34(), $elseif%35()

    $elseiftrue%34():
      JMP $endif%37(%tile_sprite%109 = @_spritedata.map_acid)

    $elseif%35():
      JCC %tile_id%92 E I8 7, $elseiftrue%36(), $endif%37(%tile_sprite%109 = I32 0)

    $elseiftrue%36():
      JMP $endif%37(%tile_sprite%109 = I32 0)

    $fordone%21():
      JMP $forupd%14()

    $forupd%14():
      I16 %x%145 = ADD %x%74, I16 1
      JMP $forcond%12(%x%74 = %x%145)

    $fordone%15():
      I32 %151 = ADD %ui_data, I32 64
      I32 %150 = LOAD %151
      CALLN @_forth.interop_pcall(%xt = %150)
      I32 %154 = CALLR @_forth.interop_pop()
      I8 %max_turtles%153 = TRUNC %154
      JMP $forinit%41()

    $forinit%41():
      JMP $forcond%42(%active_turtle_count%174 = I8 0, %id%158 = I8 0)

    $forcond%42(I8 %id%158, I8 %active_turtle_count%174):
      JCC %id%158 B %max_turtles%153, $fortrue%43(), $fordone%45()

    $fortrue%43():
      I32 %162 = ZX %id%158
      CALLN @_forth.interop_push(%val = %162)
      I32 %166 = ADD %ui_data, I32 68
      I32 %165 = LOAD %166
      CALLN @_forth.interop_pcall(%xt = %165)
      I32 %169 = CALLR @_forth.interop_pop()
      JCC %169 NE I32 0, $iftrue%46(), $endif%47(%active_turtle_count%180 = %active_turtle_count%174)

    $iftrue%46():
      I8 %active_turtle_count%172 = ADD %active_turtle_count%174, I8 1
      JMP $endif%47(%active_turtle_count%180 = %active_turtle_count%172)

    $endif%47(I8 %active_turtle_count%180):
      JMP $forupd%44()

    $forupd%44():
      I8 %id%176 = ADD %id%158, I8 1
      JMP $forcond%42(%active_turtle_count%174 = %active_turtle_count%180, %id%158 = %id%176)

    $fordone%45():
      I32 %185 = ADD %ui_data, I32 60
      I32 %184 = LOAD %185
      CALLN @_forth.interop_pcall(%xt = %184)
      I32 %189 = ADD %ui_data, I32 56
      I32 %188 = LOAD %189
      CALLN @_forth.interop_pcall(%xt = %188)
      I32 %193 = ADD %ui_data, I32 52
      I32 %192 = LOAD %193
      CALLN @_forth.interop_pcall(%xt = %192)
      I32 %197 = ADD %ui_data, I32 72
      I32 %196 = LOAD %197
      CALLN @_forth.interop_pcall(%xt = %196)
      I32 %200 = CALLR @_forth.interop_pop()
      I8 %fuel_win%199 = TRUNC %200
      I32 %203 = CALLR @_forth.interop_pop()
      I8 %fuel_count%202 = LOAD %203
      I32 %206 = CALLR @_forth.interop_pop()
      I8 %metal_count%205 = LOAD %206
      I32 %209 = CALLR @_forth.interop_pop()
      I8 %disco_count%208 = LOAD %209
      I32 %213 = ADD %ui_data, I32 20
      I32 %212 = LOAD %213
      I32 %211 = ADD %212, I32 11
      STORE I8 6 -> %211
      I32 %218 = ADD %ui_data, I32 20
      I32 %217 = LOAD %218
      CALLN @_editor.set_term_area(%region = %217)
      I32 %str_slash%221 = STACK NONE 2
      STORE I8 8 -> %str_slash%221
      I32 %226 = ADD %str_slash%221, I32 1
      STORE I8 47 -> %226
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_page)
      CALLN @_os.write_file(%handle_id = I16 1, %buffer_ptr = @scene_camera.str_turtles%67, %buffer_length = I32 7)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      I32 %239 = ZX %active_turtle_count%174
      CALLN @_forth.interop_push(%val = %239)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_dot)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      CALLN @_os.write_file(%handle_id = I16 1, %buffer_ptr = @scene_camera.str_fuel%68, %buffer_length = I32 4)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      I32 %254 = ZX %fuel_count%202
      CALLN @_forth.interop_push(%val = %254)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_dot)
      CALLN @_os.write_file(%handle_id = I16 1, %buffer_ptr = %str_slash%221, %buffer_length = I32 2)
      I32 %263 = ZX %fuel_win%199
      CALLN @_forth.interop_push(%val = %263)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_dot)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      CALLN @_os.write_file(%handle_id = I16 1, %buffer_ptr = @scene_camera.str_metal%69, %buffer_length = I32 5)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      I32 %278 = ZX %metal_count%205
      CALLN @_forth.interop_push(%val = %278)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_dot)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      CALLN @_os.write_file(%handle_id = I16 1, %buffer_ptr = @scene_camera.str_artifacts%70, %buffer_length = I32 8)
      I32 %291 = ZX %disco_count%208
      CALLN @_forth.interop_push(%val = %291)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_dot)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      CALLN @_forth.interop_pcall(%xt = @_forth.fword_cr)
      JCC %disco_count%208 AE I8 1, $iftrue%48(), $endif%49()

    $iftrue%48():
      CALLN @_sprites.draw_transparent(%sp = @_spritedata.artefact_urn, %x = I16 240, %y = I16 104)
      JCC %disco_count%208 AE I8 2, $iftrue%50(), $endif%51()

    $iftrue%50():
      CALLN @_sprites.draw_transparent(%sp = @_spritedata.artefact_tablet, %x = I16 256, %y = I16 104)
      JCC %disco_count%208 AE I8 3, $iftrue%52(), $endif%53()

    $iftrue%52():
      CALLN @_sprites.draw_transparent(%sp = @_spritedata.artefact_skull, %x = I16 272, %y = I16 104)
      JCC %disco_count%208 AE I8 4, $iftrue%54(), $endif%55()

    $iftrue%54():
      CALLN @_sprites.draw_transparent(%sp = @_spritedata.artefact_amulet, %x = I16 288, %y = I16 104)
      JMP $endif%55()

    $endif%55():
      JMP $endif%53()

    $endif%53():
      JMP $endif%51()

    $endif%51():
      JMP $endif%49()

    $endif%49():
      I32 %325 = ADD %ui_data, I32 16
      I32 %324 = LOAD %325
      CALLN @_editor.set_term_area(%region = %324)
      CALLN @_util.unbuffer_screen()
      JMP $endif%5(%last_update_time%402 = %time%32)

    $endif%5(I32 %last_update_time%402):
      CALLN @_os.defer()
      I8 %input%330 = CALLR @non_blocking_read()
      JCC %input%330 NE I8 0, $iftrue%56(), $endif%57(%active_window%416 = %active_window%415)

    $iftrue%56():
      I8 %input_char%334 = AND %input%330, I8 127
      I8 %input_shift%337 = AND %input%330, I8 128
      JCC %input_char%334 E I8 27, $iftrue%58(), $elseif%59()

    $iftrue%58():
      RET I8 2

    $elseif%59():
      I8 %344 = SELECT %input_char%334 E I8 10, @true, @false
      I8 %347 = SELECT %active_window%415 E I8 6, @true, @false
      I8 %343 = AND %344, %347
      JCC %343 NE NONE 0, $elseiftrue%60(), $elseif%61()

    $elseiftrue%60():
      RET I8 2

    $elseif%61():
      JCC %input_char%334 E I8 9, $elseiftrue%62(), $endif%63(%active_window%417 = %active_window%415)

    $elseiftrue%62():
      JCC %active_window%415 E I8 5, $iftrue%64(), $else%65()

    $iftrue%64():
      CALLN @_sprites.draw(%sp = @_spritedata.button_nohighlight_3dview_mirror, %x = I16 16, %y = I16 104)
      CALLN @_sprites.draw(%sp = @_spritedata.button_nohighlight_3dview, %x = I16 64, %y = I16 104)
      CALLN @_sprites.draw(%sp = @_spritedata.button_nohighlight_turtle_mirror, %x = I16 104, %y = I16 112)
      CALLN @_sprites.draw(%sp = @_spritedata.button_nohighlight_turtle, %x = I16 176, %y = I16 112)
      CALLN @_sprites.draw(%sp = @_spritedata.tab_code_highlight, %x = I16 168, %y = I16 217)
      JMP $endif%66(%active_window%418 = I8 6)

    $endif%66(I8 %active_window%418):
      JMP $endif%63(%active_window%417 = %active_window%418)

    $endif%63(I8 %active_window%417):
      JMP $endif%57(%active_window%416 = %active_window%417)

    $endif%57(I8 %active_window%416):
      JMP $whilecond%1(%active_window%415 = %active_window%416, %last_update_time%37 = %last_update_time%402)

    $else%65():
      CALLN @_sprites.draw(%sp = @_spritedata.tab_code, %x = I16 168, %y = I16 217)
      CALLN @_sprites.draw(%sp = @_spritedata.button_highlight_3dview_mirror, %x = I16 16, %y = I16 104)
      CALLN @_sprites.draw(%sp = @_spritedata.button_highlight_3dview, %x = I16 64, %y = I16 104)
      CALLN @_sprites.draw(%sp = @_spritedata.button_highlight_turtle_mirror, %x = I16 104, %y = I16 112)
      CALLN @_sprites.draw(%sp = @_spritedata.button_highlight_turtle, %x = I16 176, %y = I16 112)
      JMP $endif%66(%active_window%418 = I8 5)

    $whiledone%3():
      RET NONE 0
  }

  func NONE @ui_end(I32 %ui_data) {
    $entry():
      I32 %buff%1 = STACK NONE 2
      I32 %4 = ADD %ui_data, I32 12
      I32 %3 = LOAD %4
      I32 %2 = ADD %3, I32 1
      I32 %10 = ADD %ui_data, I32 12
      I32 %9 = LOAD %10
      I32 %8 = ADD %9, I32 1
      I8 %7 = LOAD %8
      I8 %6 = ADD %7, I8 2
      STORE %6 -> %2
      I32 %15 = ADD %ui_data, I32 12
      I32 %14 = LOAD %15
      I32 %13 = ADD %14, I32 10
      STORE I8 6 -> %13
      I32 %20 = ADD %ui_data, I32 12
      I32 %19 = LOAD %20
      I32 %18 = ADD %19, I32 11
      STORE I8 0 -> %18
      I32 %25 = ADD %ui_data, I32 12
      I32 %24 = LOAD %25
      CALLN @_editor.set_term_area(%region = %24)
      I32 %29 = ADD %ui_data, I32 48
      I32 %28 = LOAD %29
      CALLN @_forth.interop_pcall(%xt = %28)
      CALLN @wait(%drop_input = I8 1, %ms = I32 500)
      JMP $whilecond%1()

    $whilecond%1():
      JMP $whiletrue%2()

    $whiletrue%2():
      CALLN @_os.read_file(%handle_id = I16 0, %buffer_ptr = %buff%39, %buffer_length = I32 1)
      I8 %input%40 = LOAD %buff%1
      I8 %input_shift%44 = AND %input%40, I8 128
      I8 %input_char%47 = AND %input%40, I8 127
      I8 %51 = SELECT %input_char%47 E I8 27, @true, @false
      I8 %54 = SELECT %input_char%47 E I8 10, @true, @false
      I8 %50 = OR %51, %54
      JCC %50 NE NONE 0, $iftrue%4(), $endif%5()

    $iftrue%4():
      CALLN @_os.exit()
      JMP $endif%5()

    $endif%5():
      JMP $whilecond%1()

    $whiledone%3():
      RET NONE 0
  }

  func I8 @scene_menu(I32 %ui_data) {
    $entry():
      CALLN @_sprites.draw(%sp = @_spritedata.title, %x = I16 0, %y = I16 0)
      I32 %buff%5 = STACK NONE 2
      CALLN @_os.read_file(%handle_id = I16 0, %buffer_ptr = %buff%5, %buffer_length = I32 1)
      RET I8 1
  }

  func I8 @scene_editor(I32 %ui_data) {
    $entry():
      CALLN @_sprites.draw(%sp = @_spritedata.code_bg, %x = I16 0, %y = I16 0)
      I32 %8 = LOAD %ui_data
      I32 %7 = ADD %8, I32 11
      STORE I8 6 -> %7
      I32 %14 = ADD %ui_data, I32 4
      I32 %13 = LOAD %14
      I32 %12 = ADD %13, I32 11
      STORE I8 5 -> %12
      I32 %19 = ADD %ui_data, I32 8
      I32 %18 = LOAD %19
      I32 %17 = ADD %18, I32 11
      STORE I8 5 -> %17
      CALLN @_sprites.draw(%sp = @_spritedata.tab_camera, %x = I16 15, %y = I16 216)
      CALLN @_sprites.draw(%sp = @_spritedata.code_launch, %x = I16 17, %y = I16 200)
      I32 %31 = LOAD %ui_data
      CALLN @_editor.draw_region(%region = %31)
      I32 %36 = ADD %ui_data, I32 4
      I32 %35 = LOAD %36
      CALLN @_editor.draw_region(%region = %35)
      I32 %40 = ADD %ui_data, I32 8
      I32 %39 = LOAD %40
      CALLN @_editor.draw_region(%region = %39)
      JMP $whilecond%1(%active_window%44 = I8 0)

    $whilecond%1(I8 %active_window%44):
      JMP $whiletrue%2()

    $whiletrue%2():
      JCC %active_window%44 E I8 0, $iftrue%4(), $elseif%5()

    $iftrue%4():
      I32 %47 = LOAD %ui_data
      I32 %46 = ADD %47, I32 11
      STORE I8 6 -> %46
      I32 %54 = LOAD %ui_data
      I8 %exit_char%52 = CALLR @_editor.edit_region(%region = %54, %edit = I8 1)
      I8 %exit_shift%58 = AND %exit_char%52, I8 128
      I8 %exit_char%61 = AND %exit_char%52, I8 127
      JCC %exit_char%61 E I8 27, $iftrue%43(), $elseif%44()

    $iftrue%43():
      RET I8 1

    $elseif%44():
      JCC %exit_char%61 E I8 9, $elseiftrue%45(), $endif%46(%active_window%239 = %active_window%44)

    $elseiftrue%45():
      I32 %70 = LOAD %ui_data
      I32 %69 = ADD %70, I32 11
      STORE I8 5 -> %69
      I32 %75 = LOAD %ui_data
      CALLN @_editor.draw_region(%region = %75)
      JCC %exit_shift%58 NE NONE 0, $iftrue%47(), $else%48()

    $iftrue%47():
      JMP $endif%49(%active_window%240 = I8 4)

    $endif%49(I8 %active_window%240):
      JMP $endif%46(%active_window%239 = %active_window%240)

    $endif%46(I8 %active_window%239):
      JMP $endif%12(%active_window%81 = %active_window%239)

    $endif%12(I8 %active_window%81):
      JMP $whilecond%1(%active_window%44 = %active_window%81)

    $else%48():
      JMP $endif%49(%active_window%240 = I8 1)

    $elseif%5():
      JCC %active_window%44 E I8 1, $elseiftrue%6(), $elseif%7()

    $elseiftrue%6():
      I32 %87 = ADD %ui_data, I32 4
      I32 %86 = LOAD %87
      I32 %85 = ADD %86, I32 11
      STORE I8 6 -> %85
      I32 %93 = ADD %ui_data, I32 4
      I32 %92 = LOAD %93
      I8 %exit_char%90 = CALLR @_editor.edit_region(%region = %92, %edit = I8 0)
      I8 %exit_shift%96 = AND %exit_char%90, I8 128
      I8 %exit_char%99 = AND %exit_char%90, I8 127
      JCC %exit_char%99 E I8 27, $iftrue%36(), $elseif%37()

    $iftrue%36():
      RET I8 1

    $elseif%37():
      JCC %exit_char%99 E I8 9, $elseiftrue%38(), $endif%39(%active_window%241 = %active_window%44)

    $elseiftrue%38():
      I32 %109 = ADD %ui_data, I32 4
      I32 %108 = LOAD %109
      I32 %107 = ADD %108, I32 11
      STORE I8 5 -> %107
      I32 %114 = ADD %ui_data, I32 4
      I32 %113 = LOAD %114
      CALLN @_editor.draw_region(%region = %113)
      JCC %exit_shift%96 NE NONE 0, $iftrue%40(), $else%41()

    $iftrue%40():
      JMP $endif%42(%active_window%242 = I8 0)

    $endif%42(I8 %active_window%242):
      JMP $endif%39(%active_window%241 = %active_window%242)

    $endif%39(I8 %active_window%241):
      JMP $endif%12(%active_window%81 = %active_window%241)

    $else%41():
      JMP $endif%42(%active_window%242 = I8 2)

    $elseif%7():
      JCC %active_window%44 E I8 2, $elseiftrue%8(), $elseif%9()

    $elseiftrue%8():
      I32 %123 = ADD %ui_data, I32 8
      I32 %122 = LOAD %123
      I32 %121 = ADD %122, I32 11
      STORE I8 6 -> %121
      I32 %129 = ADD %ui_data, I32 8
      I32 %128 = LOAD %129
      I8 %exit_char%126 = CALLR @_editor.edit_region(%region = %128, %edit = I8 1)
      I8 %exit_shift%132 = AND %exit_char%126, I8 128
      I8 %exit_char%135 = AND %exit_char%126, I8 127
      JCC %exit_char%135 E I8 27, $iftrue%29(), $elseif%30()

    $iftrue%29():
      RET I8 1

    $elseif%30():
      JCC %exit_char%135 E I8 9, $elseiftrue%31(), $endif%32(%active_window%243 = %active_window%44)

    $elseiftrue%31():
      I32 %145 = ADD %ui_data, I32 8
      I32 %144 = LOAD %145
      I32 %143 = ADD %144, I32 11
      STORE I8 5 -> %143
      I32 %150 = ADD %ui_data, I32 8
      I32 %149 = LOAD %150
      CALLN @_editor.draw_region(%region = %149)
      JCC %exit_shift%132 NE NONE 0, $iftrue%33(), $else%34()

    $iftrue%33():
      JMP $endif%35(%active_window%244 = I8 1)

    $endif%35(I8 %active_window%244):
      JMP $endif%32(%active_window%243 = %active_window%244)

    $endif%32(I8 %active_window%243):
      JMP $endif%12(%active_window%81 = %active_window%243)

    $else%34():
      JMP $endif%35(%active_window%244 = I8 3)

    $elseif%9():
      JCC %active_window%44 E I8 3, $elseiftrue%10(), $else%11()

    $elseiftrue%10():
      CALLN @_sprites.draw(%sp = @_spritedata.tab_camera_highlight, %x = I16 15, %y = I16 216)
      I32 %input_buffer%162 = STACK NONE 2
      CALLN @_os.read_file(%handle_id = I16 0, %buffer_ptr = %input_buffer%162, %buffer_length = I32 1)
      I8 %exit_char%167 = LOAD %input_buffer%162
      I8 %exit_shift%171 = AND %exit_char%167, I8 128
      I8 %exit_char%174 = AND %exit_char%167, I8 127
      I8 %178 = SELECT %exit_char%174 E I8 27, @true, @false
      I8 %181 = SELECT %exit_char%174 E I8 10, @true, @false
      I8 %177 = OR %178, %181
      JCC %177 NE NONE 0, $iftrue%22(), $elseif%23()

    $iftrue%22():
      RET I8 1

    $elseif%23():
      JCC %exit_char%174 E I8 9, $elseiftrue%24(), $endif%25(%active_window%245 = %active_window%44)

    $elseiftrue%24():
      CALLN @_sprites.draw(%sp = @_spritedata.tab_camera, %x = I16 15, %y = I16 216)
      JCC %exit_shift%171 NE NONE 0, $iftrue%26(), $else%27()

    $iftrue%26():
      JMP $endif%28(%active_window%246 = I8 2)

    $endif%28(I8 %active_window%246):
      JMP $endif%25(%active_window%245 = %active_window%246)

    $endif%25(I8 %active_window%245):
      JMP $endif%12(%active_window%81 = %active_window%245)

    $else%27():
      JMP $endif%28(%active_window%246 = I8 4)

    $else%11():
      CALLN @_sprites.draw(%sp = @_spritedata.code_launch_highlight, %x = I16 17, %y = I16 200)
      I32 %input_buffer%199 = STACK NONE 2
      CALLN @_os.read_file(%handle_id = I16 0, %buffer_ptr = %input_buffer%199, %buffer_length = I32 1)
      I8 %exit_char%204 = LOAD %input_buffer%199
      I8 %exit_shift%208 = AND %exit_char%204, I8 128
      I8 %exit_char%211 = AND %exit_char%204, I8 127
      JCC %exit_char%211 E I8 10, $iftrue%13(), $elseif%14()

    $iftrue%13():
      I8 %216 = CALLR @compile_code(%ui_data = %ui_data%50)
      RET %216

    $elseif%14():
      JCC %exit_char%211 E I8 27, $elseiftrue%15(), $elseif%16()

    $elseiftrue%15():
      RET I8 1

    $elseif%16():
      JCC %exit_char%211 E I8 9, $elseiftrue%17(), $endif%18(%active_window%247 = %active_window%44)

    $elseiftrue%17():
      CALLN @_sprites.draw(%sp = @_spritedata.code_launch, %x = I16 17, %y = I16 200)
      JCC %exit_shift%208 NE NONE 0, $iftrue%19(), $else%20()

    $iftrue%19():
      JMP $endif%21(%active_window%250 = I8 3)

    $endif%21(I8 %active_window%250):
      JMP $endif%18(%active_window%247 = %active_window%250)

    $endif%18(I8 %active_window%247):
      JMP $endif%12(%active_window%81 = %active_window%247)

    $else%20():
      JMP $endif%21(%active_window%250 = I8 0)

    $whiledone%3():
      RET NONE 0
  }

  func I8 @scene_help(I32 %ui_data) {
    $entry():
      RET NONE 0
  }
}
